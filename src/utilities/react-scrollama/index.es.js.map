{"version":3,"file":"index.es.js","sources":["../src/DebugOffset.js","../src/Scrollama.js","../src/Step.js"],"sourcesContent":["import React from 'react';\n\n// Since these styles are the only styles in the library, I opted to use inline\n// styling to maintain dependency independence\nconst markerStyles = {\n  position: 'fixed',\n  left: 0,\n  width: '100%',\n  height: 0,\n  borderTop: '2px dashed black',\n  zIndex: 9999,\n};\nconst offsetTextStyles = {\n  fontSize: '12px',\n  fontFamily: 'monospace',\n  margin: 0,\n  padding: 6,\n};\n\nconst DebugOffset = ({ offsetMargin, offsetVal }) => (\n  <div style={{ ...markerStyles, top: offsetMargin }}>\n    <p style={offsetTextStyles}>trigger: {offsetVal}</p>\n  </div>\n);\n\nexport default DebugOffset;\n","import React, { Component, Fragment } from 'react';\nimport DebugOffset from './DebugOffset';\n\nconst OBSERVER_NAMES = [\n  'stepAbove',\n  'stepBelow',\n  'stepProgress',\n  'viewportAbove',\n  'viewportBelow',\n];\n\nclass Scrollama extends Component {\n  // step trigger callbacks\n  cb = {\n    stepEnter: () => null,\n    stepExit: () => null,\n    stepProgress: () => null,\n  };\n\n  // intersection observers\n  io = {};\n\n  // disconnects all observers of a certain function\n  disconnectObserver = name =>\n    this.io[name] && this.io[name].forEach(o => o.disconnect());\n\n  // stores step elements by id\n  stepElIds = [];\n\n  viewH = window.innerHeight;\n  pageH = 0;\n  offsetVal = 0;\n  offsetMargin = 0;\n  previousYOffset = 0;\n  progressThreshold = 0;\n\n  direction = 'down';\n\n  updateDirection = () => {\n    if (window.pageYOffset > this.previousYOffset) {\n      this.direction = 'down';\n    } else if (window.pageYOffset < this.previousYOffset) {\n      this.direction = 'up';\n    }\n    this.previousYOffset = window.pageYOffset;\n  };\n\n  isReady = false;\n  isEnabled = false;\n  isDebug = false;\n\n  progressMode = false;\n\n  constructor(props) {\n    super(props);\n    const {\n      children,\n      onStepEnter,\n      onStepExit,\n      onStepProgress,\n      offset = 0.3,\n      progress = false,\n      threshold = 4,\n      debug,\n    } = this.props;\n\n    React.Children.forEach(children, (_, idx) => {\n      const childId = `react-scrollama-${idx}`;\n      this[childId] = React.createRef();\n      this.stepElIds.push(childId);\n    });\n\n    if (offset && !isNaN(offset))\n      this.offsetVal = Math.min(Math.max(0, offset), 1);\n\n    this.cb.stepEnter = onStepEnter;\n    this.cb.stepExit = onStepExit;\n    this.cb.stepProgress = onStepProgress;\n\n    this.isDebug = debug;\n    this.progressMode = progress;\n    this.progressThreshold = Math.max(1, +threshold);\n\n    this.isReady = true;\n\n    // offsetMargin stored in state because it's the only property that is\n    // changed after Scrollama's construction and may be rendered (<DebugOffset/>'s\n    // position depends on it)\n    this.state = {\n      offsetMargin: this.offsetVal * this.viewH,\n    };\n  }\n\n  componentDidMount() {\n    this.domDidLoad.bind(this)();\n  }\n\n  domDidLoad() {\n    this.handleResize();\n    this.handleEnable(true);\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('load', this.domDidLoad.bind(this));\n    window.removeEventListener('resize', this.handleResize);\n    this.handleEnable(false);\n  }\n\n  /* Get step can take a step id or grab an id off a target element */\n  getStep = arg => {\n    const id =\n      arg instanceof Element ? arg.getAttribute('data-react-scrollama-id') : arg;\n    const step = this[id];\n    if (step && step.current) {\n      return step.current;\n    }\n    throw 'Could not get step with id ' + id;\n  };\n\n  handleResize = () => {\n    this.viewH = window.innerHeight;\n    this.pageH = getPageHeight();\n    this.setState({ offsetMargin: this.offsetVal * this.viewH });\n\n    if (this.isReady) {\n      // recalculate offset heights for each step\n      this.stepElIds.forEach(id => {\n        const step = this.getStep(id);\n        step.updateOffsetHeight();\n      });\n      if (this.isEnabled) this.updateIO();\n    }\n  };\n\n  handleEnable = enable => {\n    if (enable && !this.isEnabled) {\n      if (this.isReady) {\n        this.updateIO();\n      } else {\n        console.error(\n          'react scrollama: handleEnable() called before scroller was ready',\n        );\n        this.isEnabled = false;\n        return;\n      }\n    }\n    if (!enable && this.isEnabled) {\n      OBSERVER_NAMES.forEach(this.disconnectObserver);\n    }\n    this.isEnabled = enable;\n  };\n\n  // Recreate all intersection observers\n  updateIO = () => {\n    OBSERVER_NAMES.forEach(this.disconnectObserver);\n    this.updateStepAboveIO();\n    this.updateStepBelowIO();\n\n    if (this.progressMode) this.updateStepProgressIO();\n  };\n\n  /* INTERSECTION OBSERVER CREATORS */\n\n  // Create observers for intersections above steps\n  updateStepAboveIO = () => {\n    const { offsetMargin } = this.state;\n    this.io.stepAbove = this.stepElIds.map(id => {\n      const step = this.getStep(id);\n      const stepStateOffsetHeight = step.updateOffsetHeight();\n      const marginTop = -offsetMargin +  stepStateOffsetHeight; //step.state.offsetHeight;\n      const marginBottom = offsetMargin - this.viewH;\n      const options = {\n        rootMargin: `${marginTop}px 0px ${marginBottom}px 0px`,\n      };\n\n      const obs = new IntersectionObserver(this.intersectStepAbove, options);\n      obs.observe(step.getDOMNode());\n      return obs;\n    });\n  };\n\n  // Create observers for intersections below steps\n  updateStepBelowIO = () => {\n    const { offsetMargin } = this.state;\n    this.io.stepBelow = this.stepElIds.map(id => {\n      const step = this.getStep(id);\n      const stepStateOffsetHeight = step.updateOffsetHeight();\n      const marginTop = -offsetMargin;\n      const marginBottom = offsetMargin - this.viewH + stepStateOffsetHeight; //step.state.offsetHeight;\n      const options = {\n        rootMargin: `${marginTop}px 0px ${marginBottom}px 0px`,\n      };\n\n      const obs = new IntersectionObserver(this.intersectStepBelow, options);\n      obs.observe(step.getDOMNode());\n      return obs;\n    });\n  };\n\n  // Create observers for progress\n  updateStepProgressIO = () => {\n    const { offsetMargin } = this.state;\n    this.io.stepProgress = this.stepElIds.map(id => {\n      const step = this.getStep(id);\n      const marginTop = -offsetMargin + step.state.offsetHeight;\n      const marginBottom = offsetMargin - this.viewH;\n      const options = {\n        rootMargin: `${marginTop}px 0px ${marginBottom}px 0px`,\n        threshold: this.createThreshold(step.state.offsetHeight),\n      };\n\n      const obs = new IntersectionObserver(this.intersectStepProgress, options);\n      obs.observe(step.getDOMNode());\n      return obs;\n    });\n  };\n\n  /* INTERSECTION OBSERVER HANDLERS */\n\n  // Handles scrolling down and entering or scrolling up and leaving a step\n  intersectStepAbove = ([entry]) => {\n    this.updateDirection();\n    const { offsetMargin } = this.state;\n    const {\n      isIntersecting,\n      boundingClientRect: { top, bottom },\n      target,\n    } = entry;\n\n    const topAdjusted = top - offsetMargin;\n    const bottomAdjusted = bottom - offsetMargin;\n\n    const step = this.getStep(target);\n\n    if (\n      isIntersecting &&\n      topAdjusted <= 0 &&\n      bottomAdjusted >= 0 &&\n      this.direction === 'down' &&\n      step.state.state !== 'enter'\n    )\n      this.notifyStepEnter(step, this.direction);\n\n    // Exiting from above means not intersecting and topAdjusted is positive\n    if (\n      !isIntersecting &&\n      // Should be >0, but >-0.05 fixes a weird floating point issue in Chrome.\n      // The exact –ε is different for every this.prop.offset. Very sad folks.\n      topAdjusted > -0.5 &&\n      this.direction === 'up' &&\n      step.state.state === 'enter'\n    )\n      this.notifyStepExit(step, this.direction);\n  };\n\n  // Handles scrolling up and entering or scrolling down and leaving a step\n  intersectStepBelow = ([entry]) => {\n    this.updateDirection();\n    const { offsetMargin } = this.state;\n    const {\n      isIntersecting,\n      boundingClientRect: { top, bottom },\n      target,\n    } = entry;\n\n    const topAdjusted = top - offsetMargin;\n    const bottomAdjusted = bottom - offsetMargin;\n\n    const step = this.getStep(target);\n\n    if (\n      isIntersecting &&\n      topAdjusted <= 0 &&\n      bottomAdjusted >= 0 &&\n      this.direction === 'up' &&\n      step.state.state !== 'enter'\n    )\n      this.notifyStepEnter(step, this.direction);\n\n    if (\n      !isIntersecting &&\n      bottomAdjusted < 0 &&\n      this.direction === 'down' &&\n      step.state.state === 'enter'\n    )\n      this.notifyStepExit(step, this.direction);\n  };\n\n  intersectStepProgress = ([entry]) => {\n    this.updateDirection();\n    const {\n      isIntersecting,\n      intersectionRatio,\n      boundingClientRect: { bottom },\n      target,\n    } = entry;\n\n    const bottomAdjusted = bottom - this.state.offsetMargin;\n    if (isIntersecting && bottomAdjusted >= 0)\n      this.notifyStepProgress(this.getStep(target), intersectionRatio);\n  };\n\n  createThreshold = height => {\n    const count = Math.ceil(height / this.progressThreshold);\n    const t = [];\n    const ratio = 1 / count;\n    for (let i = 0; i <= count; i += 1) {\n      t.push(i * ratio);\n    }\n    return t;\n  };\n\n  /* NOTIFY CALLBACKS */\n\n  notifyStepProgress = (step, progress) => {\n    if (progress !== undefined) step.progress(progress);\n\n    const resp = {\n      element: step.getDOMNode(),\n      data: step.getData(),\n      progress: step.state.progress,\n    };\n    if (step.state.state === 'enter') this.cb.stepProgress(resp);\n  };\n\n  notifyStepEnter = (step, direction) => {\n    step.enter(direction);\n\n    const resp = {\n      element: step.getDOMNode(),\n      data: step.getData(),\n      direction,\n    };\n    if (this.cb.stepEnter) this.cb.stepEnter(resp);\n\n    if (this.progressMode) this.notifyStepProgress(step);\n  };\n\n  notifyStepExit = (step, direction) => {\n    if (this.progressMode) {\n      if (direction === 'down' && step.state.progress < 1)\n        this.notifyStepProgress(step, 1);\n      if (direction === 'up' && step.state.progress > 0)\n        this.notifyStepProgress(step, 0);\n    }\n    step.exit(direction);\n\n    const resp = {\n      element: step.getDOMNode(),\n      data: step.getData(),\n      direction,\n    };\n    if (this.cb.stepExit) this.cb.stepExit(resp);\n  };\n\n  render() {\n    return (\n      <Fragment>\n        {this.isDebug && (\n          <DebugOffset\n            offsetMargin={this.state.offsetMargin}\n            offsetVal={this.offsetVal}\n          />\n        )}\n        {React.Children.map(this.props.children, (child, index) => {\n          const id = this.stepElIds[index];\n          return React.cloneElement(child, {\n            scrollamaId: id,\n            ref: this[id],\n          });\n        })}\n      </Fragment>\n    );\n  }\n}\n\nfunction getPageHeight() {\n  const body = document.body;\n  const html = document.documentElement;\n\n  return Math.max(\n    body.scrollHeight,\n    body.offsetHeight,\n    html.clientHeight,\n    html.scrollHeight,\n    html.offsetHeight,\n  );\n}\n\nexport default Scrollama;\n","import React, { Component } from 'react';\n\nclass Step extends Component {\n  state = {\n    direction: null, // 'up' or 'down'\n    state: null, // 'enter' or 'exit'\n    offsetHeight: null,\n    progress: 0,\n  };\n\n  nodeRef = React.createRef();\n\n  getDOMNode = () => this.nodeRef.current;\n\n  getData = () => this.props.data;\n\n  updateOffsetHeight = () =>{\n    const offsetHeight = this.getDOMNode().offsetHeight;\n    this.setState({\n      offsetHeight,\n    });\n    return offsetHeight;\n  }\n\n  enter = direction => this.setState({ state: 'enter', direction });\n  exit = direction => this.setState({ state: 'exit', direction });\n  progress = progress => this.setState({ progress });\n\n  render() {\n    const { scrollamaId, children } = this.props;\n\n    return React.cloneElement(React.Children.only(children), {\n      // place attribuet on child to retrieve id from the raw DOM node (which\n      // is what the intersection observer gives our callback\n      'data-react-scrollama-id': scrollamaId,\n\n      // place ref on child to calculate offsets\n      ref: this.nodeRef,\n    });\n  }\n}\n\nexport default Step;\n"],"names":["markerStyles","position","left","width","height","borderTop","zIndex","offsetTextStyles","fontSize","fontFamily","margin","padding","DebugOffset","offsetMargin","offsetVal","top","OBSERVER_NAMES","Scrollama","props","stepEnter","stepExit","stepProgress","name","io","forEach","o","disconnect","window","innerHeight","pageYOffset","previousYOffset","direction","arg","id","Element","getAttribute","step","current","viewH","pageH","getPageHeight","setState","isReady","stepElIds","getStep","updateOffsetHeight","isEnabled","updateIO","enable","console","error","disconnectObserver","updateStepAboveIO","updateStepBelowIO","progressMode","updateStepProgressIO","state","stepAbove","map","stepStateOffsetHeight","marginTop","marginBottom","options","rootMargin","obs","IntersectionObserver","intersectStepAbove","observe","getDOMNode","stepBelow","intersectStepBelow","offsetHeight","threshold","createThreshold","intersectStepProgress","entry","updateDirection","isIntersecting","boundingClientRect","bottom","target","topAdjusted","bottomAdjusted","notifyStepEnter","notifyStepExit","intersectionRatio","notifyStepProgress","count","Math","ceil","progressThreshold","t","ratio","i","push","progress","undefined","resp","element","data","getData","cb","enter","exit","children","onStepEnter","onStepExit","onStepProgress","offset","debug","React","Children","_","idx","childId","createRef","isNaN","min","max","isDebug","domDidLoad","bind","handleResize","handleEnable","addEventListener","removeEventListener","child","index","cloneElement","scrollamaId","ref","Component","body","document","html","documentElement","scrollHeight","clientHeight","Step","nodeRef","only"],"mappings":"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"}